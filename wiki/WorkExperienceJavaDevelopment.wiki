#summary Specification for the work experience java development

<h1> Java Development Specification </h1>

This document outlines a specification for the [http://www.java.com/en/ Java] based development to be undertaken as part of a work experience opportunity in 2011. The classes, once developed, will be included as part of the [UtilsPackage AusStage Utilities Package].

<wiki:toc max_depth="4" />

= General Development Guidelines =

The classes and other code produced as part of this specification must:

 # Method definitions must include appropriate comments such as those outlined in the definition sections of this specification
 # Parameters *must* be validated using methods in the [http://aus-e-stage.googlecode.com/svn/trunk/utils-lib/docs/api/au/edu/ausstage/utils/InputUtils.html InputUtils class] such as the [http://aus-e-stage.googlecode.com/svn/trunk/utils-lib/docs/api/au/edu/ausstage/utils/InputUtils.html#isValid(java.lang.String) isValid(java.lang.String)] method
 # Other classes in the [UtilsPackage AusStage Utilities Package] that *must* be used include:
   # [http://aus-e-stage.googlecode.com/svn/trunk/utils-lib/docs/api/au/edu/ausstage/utils/CommandLineParser.html CommandLineParser] for managing parameters
   # [http://aus-e-stage.googlecode.com/svn/trunk/utils-lib/docs/api/au/edu/ausstage/utils/FileUtils.html FileUtils] for validating paths, and writing files
 # XML generated by the classes *must* prove to be [http://www.w3.org/TR/REC-xml/#sec-well-formed well-formed] and [http://en.wikipedia.org/wiki/XML#Schemas_and_validation valid].
 # XML *must* be generated using the classes in the [http://download.oracle.com/javase/6/docs/api/org/w3c/dom/package-summary.html org.w3c.dom] package
 # XML *must* be formatted for readability using a [http://techxplorer.com/2010/05/20/indenting-xml-output-in-java/ technique like this]
 # All code produced will be released under the terms of version 3 of the [http://www.gnu.org/licenses/gpl.html GNU General Public License] and as such care should be taken in copying code or methodologies

= !AusStage CSS Processing Classes =

The first task is the development of a class that can be used to process the [AusStageColourScheme AusStage Colour Scheme] CSS into a variety of different formats. 

== CSS Processing Class ==

A class is required to process a base CSS into three different outputs. The class must have the following three public methods:

 # getForegroundCSS
 # getBackgroundCSS
 # getKMLStyles

=== Class definition ===

The definitions for the three required methods are as follows:

{{{
/**
 * A method to process the base CSS and produce the foregound CSS
 *
 * @param baseCSS the base CSS that will be processed
 *
 * @return        the processed CSS
 */
public String getForegroundCSS(String baseCSS) {

}
}}}

{{{
/**
 * A method to process the base CSS and produce the background CSS
 *
 * @param baseCSS the base CSS that will be processed
 *
 * @return        the processed CSS
 */
public String getBackgroundCSS(String baseCSS) {

}
}}}

{{{
/**
 * A method to process the base CSS and produce the KML styles
 *
 * @param baseCSS the base CSS that will be processed
 *
 * @return        the KML styles
 */
public String getBackgroundCSS(String baseCSS) {

}
}}}

=== Sample Input and Output ===

==== Base CSS ====

{{{
.1 {

	color: #4eb8ad;

}



.2 {

	color: #004d35;

}



.3 {

	color: #66c547;

}



.4 {

	color: #ffc11f;

}
}}}

==== Foreground CSS ====

{{{
.f-1 {
  color: #4eb8ad;
}

.f-2 {
  color: #004d35;
}

.f-3 {
  color: #66c547;
}

.f-4 {
  color: #ffc11f;
}
}}}

==== Background CSS ====

{{{
.b-1 {
  background-color: #4eb8ad;
}

.b-2 {
  background-color: #004d35;
}

.b-3 {
  background-color: #66c547;
}

.b-4 {
  background-color: #ffc11f;
}
}}}

==== KML Style ====

{{{

}}}

== CSS Test Class ==

A simple command line driven application is required to test the [WorkExperienceJavaDevelopment#CSS_Processing_Class CSS Processing Class]. 

This application must take as parameters:

 # task - A parameter that defines the task to be undertaken
 # input - The path to a file that contains the base CSS
 # output - The path to a file to be used as output

Valid task parameters are:

 # foreground - create the foreground CSS
 # background - create the background CSS
 # kml-style  - create the KML styles

The application must use the [WorkExperienceJavaDevelopment#CSS_Processing_Class CSS Processing Class] to process the CSS found in the file specified at the input path and write the new CSS, or KML Styles, into the output file as specified by the task parameter

All parameters must be validated using the classes and methods outlined in the [WorkExperienceJavaDevelopment#General_Development_Guidelines General Development Guidelines].

An example of the way the application should be structured is available in the [http://aus-e-stage.googlecode.com/svn/trunk/website-analytics/src/au/edu/ausstage/websiteanalytics/WebsiteAnalytics.java WebsiteAnalytics class]

= GraphML Manager Class =

The [NetworkService Navigating Networks Service] is required to export data in a variety of different formats. One of the main formats that will be used is [http://graphml.graphdrawing.org/ GraphML]. !GraphML is a XML based format and the class will need to provide methods to:

 # Create a !GraphML document
 # Define options for the !GraphML document
 # Add metadata elements to the document
 # Add nodes and edges to the document
 # Add metadata, from the list of elements added to the document, to nodes and edges


