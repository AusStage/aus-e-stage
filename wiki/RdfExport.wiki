#summary Using the RdfExport App to Create the Navigating Networks Dataset

<h1>Creating the Navigating Networks Dataset</h1>

The creation of the dataset for use by the Navigating Networks service is achieved using the !RdfExport application. This application, written in Java, creates an RDF based datastore that contains all data necessary to create network diagrams. 

More information about the application such as the tools and ontologies used, is available on the RdfExportMoreInfo page.

_Note:_ It is strongly advised to only run this application on a 64bit operating system.

The application undertakes the following tasks:

<wiki:toc max_depth="2" />

= Building the Dataset =

The current dataset contains the elements listed on the NavigatingNetworksDataset page. 

To build the dataset follow these steps:

 # Ensure the application is installed by [RdfExportMoreInfo#Installing_the_Application following these directions]
 # Ensure the application is configured by [RdfExportMoreInfo#Configuring_the_Application following these directions]
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   {{{/usr/bin/java -Xmx2048m -Xms512m -jar AusStageRdfExport.jar -task build-network-data -properties properties-file}}}
 # If the application errors with an out of memory error message increase the heap space by increasing the values to the _-Xmx_ and _-Xms_ parameters
 # The application will take some time to complete and its output will look like this:

<pre>
INFO: Connecting to the database...
INFO: Connection established
INFO: Deleting the existing TDB datastore...
INFO: Existing TDB datastore deleted
INFO: Adding contributor data to the datastore...
INFO: 81,680 contributors successfully added to the datastore
INFO: Adding contributor functions...
INFO: 101,984 contributor functions successfully added
INFO: Adding collaborator relationships...
INFO: Each '#' below represents 10,000 collaborations
##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|##########|####
INFO: 1,640,250 collaborations successfully added to the datastore
INFO: Adding events...
INFO: 43,706 events successfully added to the datastore
INFO: Adding contributor functions to events...
INFO: 283,617 contributor function at event records added
INFO: Task completed successfully
</pre>


= Exporting the Dataset =

The dataset can be exported into a variety of different serialised data formats and they are:

 * RDF/XML - http://en.wikipedia.org/wiki/RDF/XML
 * N-TRIPLE - http://en.wikipedia.org/wiki/N-Triples
 * TURTLE - http://en.wikipedia.org/wiki/Turtle_(syntax)
 * N3 - http://en.wikipedia.org/wiki/Notation3

To export the entire dataset follow these steps:

 # Ensure the application is installed by [RdfExportMoreInfo#Installing_the_Application following these directions]
 # Ensure the application is configured by [RdfExportMoreInfo#Configuring_the_Application following these directions]
 # Ensure the dataset has been created by following the [RdfExport#Building_the_Dataset Building the Dataset] steps
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   # format-type: is one of the listed formats above
   # output-file: is the name of the output file to create (including path information)
   {{{/usr/bin/java -jar AusStageRdfExport.jar -tasktype export-network-data -properties properties-file -format format-type -output output-file}}}
 # If no format is specified the default format 'RDF/XML' will be used
 # The application will take a short time to complete and the output will look like this:

<pre>
INFO: No data format specified. Using 'RDF/XML' by default
INFO: Exporting datastore into a file with format 'RDF/XML'
INFO: Export file successfully created
      /home/ausstage/exports/network-rdf-export.xml
INFO: Task completed successfully
</pre>

= Querying the Dataset = 

Querying the dataset is possible using the SPARQL query language with ARQ specific extensions. 

_Note:_ This functionality is designed to assist in the development of queries for use in other applications / services and is not meant to provide an query and export workflow

To query the dataset follow these steps:

 # Ensure the application is installed by [RdfExportMoreInfo#Installing_the_Application following these directions]
 # Ensure the application is configured by [RdfExportMoreInfo#Configuring_the_Application following these directions]
 # Ensure the dataset has been created by following the [RdfExport#Building_the_Dataset Building the Dataset] steps
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   # query-file: is the location of a plain text file that defines the query (including path information)
   {{{/usr/bin/java -jar AusStageRdfExport.jar -tasktype run-query -properties properties-file mat format-type -query query-file}}}

= Exporting the Dataset as an Edge List File = 

The Edge List File is contains data in the following plain text format where each line contains the following

 * contributorid - the unique identifier of a contributor
 * givenName - the given name of the contributor
 * familyName - the family name of the contributor
 * tab - the tab character

{{{
<contributorid><tab><givenName><tab><familyName><tab><contributorid><tab><givenName><tab><familyName>
}}}

_Note:_ This export contains duplicate edges for example:

{{{
<01><tab><James><tab><Bond><tab><02><tab><Money><tab><Penny>
<02><tab><Money><tab><Penny><tab><01><tab><James><tab><Bond>
}}}

To produce a an list of edges without duplicates substitute _edge-list-export_ with _edge-list-export-no-dups_ in step 5 below.

This format can be used in a variety of graph based applications. 

To export the dataset in this format use the following steps:

 # Ensure the application is installed by [RdfExportMoreInfo#Installing_the_Application following these directions]
 # Ensure the application is configured by [RdfExportMoreInfo#Configuring_the_Application following these directions]
 # Ensure the dataset has been created by following the [RdfExport#Building_the_Dataset Building the Dataset] steps
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   # output-file: is the name of the output file to create (including path information)
   {{{/usr/bin/java -jar AusStageRdfExport.jar -tasktype edge-list-export -properties properties-file mat format-type -output output-file}}}