#summary Using the RdfExport App to Create the Navigating Networks Dataset

<h1>Creating the Navigating Networks Dataset</h1>

The creation of the dataset for use by the Navigating Networks service is achieved using the !RdfExport application. This application, written in Java, creates an RDF based datastore that contains all data necessary to create network diagrams. 

More information about the application such as the tools and ontologies used, is available on the RdfExportMoreInfo page.

The application undertakes the following tasks:

<wiki:toc max_depth="2" />

= Building the Dataset =

The current dataset contains the following data elements:

 * The contributor id, encoded using this scheme
 * The contributor name
 * The contributor given name
 * The contributor family name
 * A link to the contributor page in [http://www.ausstage.edu.au AusStage]
 * Links between contributors that have worked on the same event

To build the dataset follow these steps:

 # Ensure the application is installed by following these directions
 # Ensure the application is configured by following directions
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   {{{/usr/bin/java -jar AusStageRdfExport.jar -tasktype build-network-data -properties properties-file}}}
 # If the application errors with an out of memory error message increase the heap space available by including the following switch {{{-Xmx2028m}}}
 # If the application errors with a garbage collection related error use the following switch {{{-XX:-UseGCOverheadLimit}}}
 # The application will take some time to complete and its output will look like this:

<pre>
INFO: Connecting to the database...
INFO: Connection established
INFO: Deleting the existing TDB datastore...
INFO: Existing TDB datastore deleted
INFO: Adding contributor data to the datastore...
INFO: 81350 contributors successfully added to the datastore
INFO: Adding basic collaboration relationships...
INFO: 3268928 collaboration relationships successfully added to the datastore
INFO: Task completed successfully
</pre>


= Exporting the Dataset =

The dataset can be exported into a variety of different serialised data formats and they are:

 * RDF/XML - http://en.wikipedia.org/wiki/RDF/XML
 * N-TRIPLE - http://en.wikipedia.org/wiki/N-Triples
 * TURTLE - http://en.wikipedia.org/wiki/Turtle_(syntax)
 * N3 - http://en.wikipedia.org/wiki/Notation3

To export the entire dataset follow these steps:

 # Ensure the application is installed by following these directions
 # Ensure the application is configured by following directions
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   # format-type: is one of the listed formats above
   # output-file: is the name of the output file to create (including path information)
   {{{/usr/bin/java -jar AusStageRdfExport.jar -tasktype export-network-data -properties properties-file -format format-type -output output-file}}}
 # If the application errors with an out of memory error message increase the heap space available by including the following switch {{{-Xmx2028m}}}
 # If the application errors with a garbage collection related error use the following switch {{{-XX:-UseGCOverheadLimit}}}
 # If no format is specified the default format 'RDF/XML' will be used
 # The application will take a short time to complete and the output will look like this:

<pre>
INFO: No data format specified. Using 'RDF/XML' by default
INFO: Exporting datastore into a file with format 'RDF/XML'
INFO: Export file successfully created
      /home/ausstage/exports/network-rdf-export.xml
INFO: Task completed successfully
</pre>

= Querying the Dataset = 

Querying the dataset is possible using the SPARQL query language with ARQ specific extensions. 

_Note:_ This functionality is designed to assist in the development of queries for use in other applications / services and is not meant to provide an query and export workflow

To query the dataset follow these steps:

 # Ensure the application is installed by following these directions
 # Ensure the application is configured by following directions
 # Change to the _jar_ directory created when the application was installed
 # Run the application using the following command where 
   # properties-file: is the location of the properties file created in step 2
   # query-file: is the location of a plain text file that defines the query (including path information
   {{{/usr/bin/java -jar AusStageRdfExport.jar -tasktype run-query -properties properties-file mat format-type -query query-file}}}
 # If the application errors with an out of memory error message increase the heap space available by including the following switch {{{-Xmx2028m}}}
 # If the application errors with a garbage collection related error use the following switch {{{-XX:-UseGCOverheadLimit}}}

An example query is as follows:

{{{
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?knows
WHERE { 
   [
     foaf:name "William Shakespeare";
     foaf:knows ?knows
     ]
     
}
LIMIT 10
}}}

This query returns the encoded unique identifier for the first 10 contributors that have contributed to an event that William Shakespeare has also made a contribution.

= Exporting the Dataset as an Edge Node List = 