#summary Procedure document on how to use the TwitterGatherer Application

<h1> Gathering Twitter Messages </h1>

This procedure document outlines how to use the TwitterGatherer application to gather messages from the [http://twitter.com Twitter] service. 

<wiki:toc max_depth="3" />

= 0. Procedure Requirements = 

_Before attempting this procedure please ensure that the following requirements are met_

 # The computer that you intend on running the software on has access to the !AusStage database either via the Flinders University Network or via the [https://vpn.csem.flinders.edu.au/ CSEM Virtual Private Network (VPN)]
 # The latest version of [http://java.com/en/ Java] is installed on your system. At the time of writing the latest version was 1.6.x
 # You have downloaded the latest version of the TwitterGatherer application from the [http://code.google.com/p/aus-e-stage/downloads/list Downloads] area
 # You have experience in using applications via the [http://en.wikipedia.org/wiki/Command-line_interface Command Line Interface]

= 1. Prepare the !TwitterGatherer Application = 

 # Extract the contents of the zip file downloaded from the [http://code.google.com/p/aus-e-stage/downloads/list Downloads] area
 # Ensure that the following directories have been created
   * `twitter-gatherer` - The parent !TwitterGather directory
     * `jar` - a sub directory containing the main !TwitterGatherer application
     * `lib` - a sub directory containing all of the required libraries
     * `logs` - an empty sub directory used to store log files

= 2. Create a properties file = 

 # Create an empty text file in the parent directory, as defined in step 1 above
 # Name the file `default.properties`
 # Add the following lines to the text file, replacing the text in the { } brackets with the appropriate values
{{{
# Properties file for the TwitterGatherer Application
# Any line starting with a '#' is a comment and is ignored

# database connection string
db-connection-string = {AusStage Database Connection String}

# twitter user name
twitter-user = {AusStage Twitter Account User Name}

# twitter password
twitter-password = {AusStage Twitter Account Password}

# log file directory
log-dir = ../logs/

# settings for sending email
mail-host = {Outgoing SMTP email server host name}
mail-user = {Outgoing SMTP user name}
mail-password = {Outgoing SMTP password}
mail-ssl = {yes / no flag to use SSL for sending email}
mail-tls = {yes / no flag to use TLS for sending email}
mail-port = {Outgoing SMTP Server Port}
mail-from-address = {Address to send email from}
mail-to-address = {Address(s) to send email to separated by commas}
}}}
 # If you are unsure about any values for the above options, contact the !AusStage team
 # Save the file, and ensure it is saved as plain text

= 3. Start the !TwitterGatherer Application =

 # Open a new terminal window
 # Navigate to the parent !TwitterGatherer directory, as defined in step 1 above
 # Navigate to the `jar` sub directory 
 # Start the !TwitterGatherer Application using the following command <br/>`java -jar TwitterGatherer.jar -properties ../default.properties`
 # The output from the application should be as follows _Note:_ The list of tags and version number may be different
 {{{
AusStage Twitter Gatherer - Gather Performance Feedback from Twitter
Version: 1.0.0 Build Date: 2010-08-03
More Info: http://code.google.com/p/aus-e-stage/wiki/TwitterGatherer

INFO: Application Started: Wednesday, 6 October 2010 12:04:39 PM CST
INFO: Connecting to the database
INFO: Connection established
INFO: Tracking the following hash tags
      #adt
 }}}
 # If an error occurs, check for a possible resolution in step 6 
 # If no error occurs, continue with step 4

= 4. Monitor the Collection of Messages =
 
 # Monitor the output from the application to ensure that messages are being recorded successfully
 # If an error occurs, check the email address for the exception report to manually process the message

= 5. Saving the Output From the Application =

Undertake the following tasks once all feedback has been gathered, for example the day after a performance

 # Create an archive of the log directory, such a zip file
 # Email this file to the !AusStage team

= 6. Common Errors =

== Unable to Connect to the Database ==

If the !TwitterGatherer Application is unable to connect to the database:

 # Check that you can connect to the database using an application such as [http://www.oracle.com/technetwork/developer-tools/sql-developer/index.html Oracle SQL Developer]
 # Confirm that you are using a computer that can access the Database Server such as those in the drama department or via the [https://vpn.csem.flinders.edu.au/ CSEM Virtual Private Network (VPN)]
 # Confirm that you are using the correct database connection details

== Unable to Connect to Twitter ==

If the !TwitterGatherer application is unable to connect to Twitter:

 # Confirm that you are using the right username and password in the `default.properties` file
 # Confirm that Twitter is up and running by visiting the [http://twitter.com Twitter] homepage
 # Ensure that no issue are listed on the [http://status.twitter.com/ Twitter Status] page
 # Ensure that you can connect to the Internet via the VPN, if not reconfigure the VPN client to allow outgoing connections to the Internet as well as connections through the VPN

= 7. Managing Exception Reports =

If an exception report is generated use the following steps as a guide to determine the appropriate course of action:

 # Manually match the feedback to a performance using the hash tag and your own judgement about the date and time that it was sent by matching the hash tag to a company hash tag and matching the date and time with an entry in the `mob_performance` table
 # Manually add the feedback to the !AusStage system using the Manual Feedback Entry page