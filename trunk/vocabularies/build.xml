<!--
 * This file is part of the AusStage RDF Vocabularies Package
 *
 * The AusStage RDF Vocabularies Package is free software: you can 
 * redistribute it and/or modify it under the terms of the GNU General 
 * Public License as published by the Free Software Foundation, either 
 * version 3 of the License, or (at your option) any later version.
 *
 * The AusStage RDF Vocabularies Package is distributed in the hope 
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the 
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the AusStage RDF Vocabularies Package.  
 * If not, see <http://www.gnu.org/licenses/>.
-->

<project name="AusStageVocabularies" default="main" basedir=".">
	
	<!-- Directories -->
	<property name="src.dir"     value="${basedir}/src"/>
    <property name="build.dir"   value="${basedir}/build"/>
    <property name="jar.dir"     value="${basedir}/jar"/>
    <property name="lib.dir"     value="${basedir}/lib"/>
    <property name="docs.dir"     value="${basedir}/docs/api"/>
    
    <!-- custom paths such as the class path -->
    <path id="classpath">
    	<fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

	<!-- compilation properties -->
	<property name="compile.debug"       value="true"/>
	<property name="compile.deprecation" value="true"/>
	<property name="compile.optimize"    value="false"/>

	<!-- clean target to tidy up from previous builds -->

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${jar.dir}"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${jar.dir}"/>
	</target>
	
	<!-- compile target to compile the source code -->

	<target name="compile">
		<javac 
			srcdir="${src.dir}" 
			destdir="${build.dir}" 
			classpathref="classpath"
			deprecation="${compile.deprecation}"
			includeAntRuntime="false"
			optimize="${compile.optimize}"
			debug="${compile.debug}">
			<compilerarg value="-Xlint:unchecked"/>
		</javac>
	</target>
	
	
	
	<!-- jar target to create the jar file -->
	
	<manifestclasspath property="lib.list" jarfile="${jar.dir}/${ant.project.name}.jar">
		<classpath refid="classpath" />
	</manifestclasspath>


	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Class-Path" value="${lib.list}"/>
			</manifest>
		</jar>
	</target>
	
	<!-- javadoc target to create the java doc files -->
	<target name="javadoc" depends="compile" description="Create Javadoc API documentation">

		<mkdir dir="${docs.dir}"/>
			<javadoc sourcepath="${src.dir}" destdir="${docs.dir}" packagenames="*">
			<classpath refid="classpath"/>
		</javadoc>

	</target>
	
	<!-- clean-build target cleans and then builds -->
	<target name="clean-build" depends="clean,jar"/>
	
	<!-- main target cleans and then compiles the app -->
	<target name="main" depends="clean,compile"/>
	
	<!-- dist target cleans, compiles packages and generates the documentation -->
	<target name="dist" depends="main,jar,javadoc"/>

</project>

